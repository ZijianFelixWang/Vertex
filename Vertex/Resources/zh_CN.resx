<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BeginConstructXMLInfo" xml:space="preserve">
    <value>开始构建XML文档.</value>
  </data>
  <data name="CCAResetedInfo" xml:space="preserve">
    <value>自动机状态重置成功</value>
  </data>
  <data name="CellsSyncInfo" xml:space="preserve">
    <value>正在同步元胞状态</value>
  </data>
  <data name="CellsUpdatedInfo" xml:space="preserve">
    <value>所有元胞状态已更新</value>
  </data>
  <data name="CurrentRankingHint" xml:space="preserve">
    <value>目前的分数是</value>
  </data>
  <data name="CVPHint" xml:space="preserve">
    <value>杂交点是</value>
  </data>
  <data name="DynamicViewerErrorHint" xml:space="preserve">
    <value>DynamicViewer 创建失败</value>
  </data>
  <data name="DynamicViewerSuccessHint" xml:space="preserve">
    <value>成功地在此处初始化了动态SVG查看器:</value>
  </data>
  <data name="EndXMLConstructionInfo" xml:space="preserve">
    <value>XML 构建完成.</value>
  </data>
  <data name="EnterMainLoopHint" xml:space="preserve">
    <value>进入主循环</value>
  </data>
  <data name="EnvFileHint" xml:space="preserve">
    <value>环境配置文件:</value>
  </data>
  <data name="EnvFileParsingDoneInfo" xml:space="preserve">
    <value>环境文件解析成功</value>
  </data>
  <data name="EnvSyntaxError" xml:space="preserve">
    <value>XML 语法错误, 细节:</value>
  </data>
  <data name="EvaluatingHint" xml:space="preserve">
    <value>正在评估规则</value>
  </data>
  <data name="ExecutionHint" xml:space="preserve">
    <value>执行[</value>
  </data>
  <data name="ExitConfirm" xml:space="preserve">
    <value>按回车键来关闭此窗口</value>
  </data>
  <data name="ExportRuleErrorHint" xml:space="preserve">
    <value>规则文件导出失败</value>
  </data>
  <data name="ExportRuleHint" xml:space="preserve">
    <value>正在导出规则文件至</value>
  </data>
  <data name="ExportRuleSuccessInfo" xml:space="preserve">
    <value>已成功导出规则文件</value>
  </data>
  <data name="ExportRuleXMLCommentContent" xml:space="preserve">
    <value>用户应补全此设置.</value>
  </data>
  <data name="ExportSVGHint" xml:space="preserve">
    <value>正在导出SVG至</value>
  </data>
  <data name="ExportSVGSnapshotHead" xml:space="preserve">
    <value>正在导出目前的SVG至</value>
  </data>
  <data name="ExportSVGSuccessInfo" xml:space="preserve">
    <value>SVG文件导出成功</value>
  </data>
  <data name="FinalSuccessInfo" xml:space="preserve">
    <value>正确的可执行规则已生成</value>
  </data>
  <data name="G0OKInfo" xml:space="preserve">
    <value>G0生成成功</value>
  </data>
  <data name="G1OKInfo" xml:space="preserve">
    <value>G1生成成功</value>
  </data>
  <data name="NoNetworkingFeatureWarn" xml:space="preserve">
    <value>此版本不支持网络, 这行配置无效</value>
  </data>
  <data name="NotSupportedError" xml:space="preserve">
    <value>有些东西不被支持. 细节:</value>
  </data>
  <data name="ProduceRuleInfo" xml:space="preserve">
    <value>正在从历史生成新规则</value>
  </data>
  <data name="RankingDecHint" xml:space="preserve">
    <value>-1 </value>
  </data>
  <data name="RankingIncHint" xml:space="preserve">
    <value>+1 </value>
  </data>
  <data name="ResultedRuleHint" xml:space="preserve">
    <value>得到的规则是</value>
  </data>
  <data name="RuleXMLSaveHint" xml:space="preserve">
    <value>正在保存XML输出至</value>
  </data>
  <data name="StartSVGExportInfo" xml:space="preserve">
    <value>开始SVG导出</value>
  </data>
  <data name="SVGExportSuccessInfo" xml:space="preserve">
    <value>SVG快照导出成功</value>
  </data>
  <data name="TasksConstructedInfo" xml:space="preserve">
    <value>所有任务创建完成</value>
  </data>
  <data name="TasksDoneInfo" xml:space="preserve">
    <value>所有任务完成</value>
  </data>
  <data name="TestFailureHint" xml:space="preserve">
    <value>对于此测试失败</value>
  </data>
  <data name="TestSuccessHint" xml:space="preserve">
    <value>对于此测试成功</value>
  </data>
</root>